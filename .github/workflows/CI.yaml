---

name: CI

on:
  schedule:
    # everyday at 1 AM on the first of every month
    - cron: '0 1 1 * *'
  pull_request:
  push:

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build and Push to GitHub registry Commit tag
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: docker.pkg.github.com/${{ github.repository }}/jelastic-cli
          username: ${{ github.repository_owner }}
          password: ${{ secrets.G_TOKEN }}
          registry: docker.pkg.github.com
          tags: "${{ github.sha }}"
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.G_TOKEN }}
      - id: repo
        run: |
          lower=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          echo "::set-output name=lower::$lower"
      - name: Anchore scan
        uses: anchore/scan-action@v2
        with:
          image: "docker.pkg.github.com/${{ steps.repo.outputs.lower }}/jelastic-cli:${{ github.sha }}"
          fail-build: true
          acs-report-enable: true
          severity-cutoff: high
      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

  docker:
    name: Build and Public Docker image
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Dry-run tag generation
        id: create_tag_test
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
      - name: Build and Push to GitHub registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: docker.pkg.github.com/${{ github.repository }}/jelastic-cli
          username: ${{ github.repository_owner }}
          password: ${{ secrets.G_TOKEN }}
          registry: docker.pkg.github.com
          tags: "${{ steps.create_tag_test.outputs.new_tag }},latest"
      - name: Build and Push to DockerHub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: aliaksandrdounar/jelastic-cli
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ github.sha }},${{ steps.create_tag_test.outputs.new_tag }},latest"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Changelog generation
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        id: changelog
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Bump version and push tag
        id: create_tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      - name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
