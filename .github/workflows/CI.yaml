---

name: CI

on:
  schedule:
    # everyday at 1 AM on the first of every month
    - cron: '0 1 1 * *'
  pull_request:
  push:

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code (Lint)
        uses: actions/checkout@v2
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          VALIDATE_DOCKERFILE_HADOLINT: true
          VALIDATE_YAML: true

  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      # Preparation
      - name: Checkout Code (Testing)
        uses: actions/checkout@v2
      - name: Set up QEMU  (Testing)
        uses: docker/setup-qemu-action@v1
      - name: Login to DockerHub (Testing)
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # Test
      - name: Test help command
        uses: ./
        with:
          login: false
          json: false
          task: help
          jelastic_url: http://example.com
          jelastic_username: test
          jelastic_password: test
        env:
          GIT_REPO: ${{ github.repository }}
      # Build
      - name: Build and Push image (Testing)
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: aliaksandrdounar/jelastic-cli:latest

  build:
    name: Build and Public Docker image
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      # Prepare
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to ghcr.io (Build)
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.G_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Dry-run tag generation
        id: create_tag_test
        uses: anothrNick/github-tag-action@1.30.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
            aliaksandrdounar/jelastic-cli
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest
            type=raw,value=${{ steps.create_tag_test.outputs.new_tag }}
      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          tags: ${{ steps.meta.outputs.tags }}
      - name: Move cache
        shell: bash
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build
    steps:
      - name: Checkout Code (Release)
        uses: actions/checkout@v2
      - name: Changelog generation
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        id: changelog
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Bump version and push tag
        id: create_tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      - name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
